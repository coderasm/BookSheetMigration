//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookSheetMigration.AWGService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.autoremarketers.com/dataadapter", ConfigurationName="AWGService.DataAdapterSoap")]
    public interface DataAdapterSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListBidsAndOffers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListInventoryResult ListBidsAndOffers(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListBidsAndOffers", ReplyAction="*")]
        System.IAsyncResult BeginListBidsAndOffers(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListInventoryResult EndListBidsAndOffers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListEventMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListEventMessagesResult ListEventMessages(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListEventMessages", ReplyAction="*")]
        System.IAsyncResult BeginListEventMessages(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListEventMessagesResult EndListEventMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListEventLogins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListEventLoginsResult ListEventLogins(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListEventLogins", ReplyAction="*")]
        System.IAsyncResult BeginListEventLogins(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListEventLoginsResult EndListEventLogins(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListInventoryResult ListInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListInventory", ReplyAction="*")]
        System.IAsyncResult BeginListInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListInventoryResult EndListInventory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListFeaturedInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListInventoryResult ListFeaturedInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListFeaturedInventory", ReplyAction="*")]
        System.IAsyncResult BeginListFeaturedInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListInventoryResult EndListFeaturedInventory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListItemsWithoutImages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListImageResult ListItemsWithoutImages(string securityToken, string clientUsername, string clientPassword, int eventId, BookSheetMigration.AWGService.InventoryStatus inventoryStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListItemsWithoutImages", ReplyAction="*")]
        System.IAsyncResult BeginListItemsWithoutImages(string securityToken, string clientUsername, string clientPassword, int eventId, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListImageResult EndListItemsWithoutImages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListImageResult ListImage(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, string stockNumber, string vin);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListImage", ReplyAction="*")]
        System.IAsyncResult BeginListImage(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, string stockNumber, string vin, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListImageResult EndListImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListTransactionResult ListTransaction(string securityToken, string clientUsername, string clientPassword, int eventId, string sellerDealerNumber, string buyerDealerNumber, BookSheetMigration.AWGService.TransactionStatus transactionStatus, string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListTransaction", ReplyAction="*")]
        System.IAsyncResult BeginListTransaction(string securityToken, string clientUsername, string clientPassword, int eventId, string sellerDealerNumber, string buyerDealerNumber, BookSheetMigration.AWGService.TransactionStatus transactionStatus, string dateFrom, string dateTo, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListTransactionResult EndListTransaction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListEventResult ListEvent(string securityToken, string clientUsername, string clientPassword, BookSheetMigration.AWGService.EventStatus eventStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListEvent", ReplyAction="*")]
        System.IAsyncResult BeginListEvent(string securityToken, string clientUsername, string clientPassword, BookSheetMigration.AWGService.EventStatus eventStatus, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListEventResult EndListEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/DecodeId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.DecodeIdResult DecodeId(string securityToken, string clientUsername, string clientPassword, string database, string idType, string id, string status, int mode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/DecodeId", ReplyAction="*")]
        System.IAsyncResult BeginDecodeId(string securityToken, string clientUsername, string clientPassword, string database, string idType, string id, string status, int mode, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.DecodeIdResult EndDecodeId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListMarketplace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListMarketplaceResult ListMarketplace(string securityToken, string clientUsername, string clientPassword, int mode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListMarketplace", ReplyAction="*")]
        System.IAsyncResult BeginListMarketplace(string securityToken, string clientUsername, string clientPassword, int mode, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListMarketplaceResult EndListMarketplace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ListEventSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ListEventSummaryResult ListEventSummary(string securityToken, string clientUsername, string clientPassword, int eventId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ListEventSummary", ReplyAction="*")]
        System.IAsyncResult BeginListEventSummary(string securityToken, string clientUsername, string clientPassword, int eventId, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ListEventSummaryResult EndListEventSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ImportInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ImportInventoryResult ImportInventory(string securityToken, string clientUsername, string clientPassword, int eventId, bool preservePriceInformation, System.Data.DataSet inventoryDataSet);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ImportInventory", ReplyAction="*")]
        System.IAsyncResult BeginImportInventory(string securityToken, string clientUsername, string clientPassword, int eventId, bool preservePriceInformation, System.Data.DataSet inventoryDataSet, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ImportInventoryResult EndImportInventory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/UpdateShippingStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.UpdateShippingStatusResult UpdateShippingStatus(string securityToken, string clientUsername, string clientPassword, int transactionId, byte shippingStatus);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/UpdateShippingStatus", ReplyAction="*")]
        System.IAsyncResult BeginUpdateShippingStatus(string securityToken, string clientUsername, string clientPassword, int transactionId, byte shippingStatus, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.UpdateShippingStatusResult EndUpdateShippingStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/UpdateInventory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.UpdateInventoryResult UpdateInventory(string securityToken, string clientUsername, string clientPassword, int listingId, string dealerNumber, string stockNumber, string vin, string propertyName, string propertyValue, int mode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/UpdateInventory", ReplyAction="*")]
        System.IAsyncResult BeginUpdateInventory(string securityToken, string clientUsername, string clientPassword, int listingId, string dealerNumber, string stockNumber, string vin, string propertyName, string propertyValue, int mode, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.UpdateInventoryResult EndUpdateInventory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ImportEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ImportEventResult ImportEvent(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet eventDataSet);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ImportEvent", ReplyAction="*")]
        System.IAsyncResult BeginImportEvent(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet eventDataSet, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ImportEventResult EndImportEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.autoremarketers.com/dataadapter/ImportOffer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BookSheetMigration.AWGService.ImportOfferResult ImportOffer(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet offerDataSet);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.autoremarketers.com/dataadapter/ImportOffer", ReplyAction="*")]
        System.IAsyncResult BeginImportOffer(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet offerDataSet, System.AsyncCallback callback, object asyncState);
        
        BookSheetMigration.AWGService.ImportOfferResult EndImportOffer(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public enum InventoryStatus {
        
        /// <remarks/>
        AllVehicles,
        
        /// <remarks/>
        AllItems,
        
        /// <remarks/>
        ReadyForRelease,
        
        /// <remarks/>
        InAuction,
        
        /// <remarks/>
        NoSale,
        
        /// <remarks/>
        Sold,
        
        /// <remarks/>
        Cancelled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListInventoryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ImportOfferResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private ImportError[] importErrorInformationField;
        
        private System.Data.DataSet offerDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ImportError[] ImportErrorInformation {
            get {
                return this.importErrorInformationField;
            }
            set {
                this.importErrorInformationField = value;
                this.RaisePropertyChanged("ImportErrorInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Data.DataSet OfferDataSet {
            get {
                return this.offerDataSetField;
            }
            set {
                this.offerDataSetField = value;
                this.RaisePropertyChanged("OfferDataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ImportError : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ImportEventResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private ImportError[] importErrorInformationField;
        
        private System.Data.DataSet eventDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ImportError[] ImportErrorInformation {
            get {
                return this.importErrorInformationField;
            }
            set {
                this.importErrorInformationField = value;
                this.RaisePropertyChanged("ImportErrorInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Data.DataSet EventDataSet {
            get {
                return this.eventDataSetField;
            }
            set {
                this.eventDataSetField = value;
                this.RaisePropertyChanged("EventDataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class UpdateInventoryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class UpdateShippingStatusResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ImportInventoryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private ImportError[] importErrorInformationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ImportError[] ImportErrorInformation {
            get {
                return this.importErrorInformationField;
            }
            set {
                this.importErrorInformationField = value;
                this.RaisePropertyChanged("ImportErrorInformation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListEventSummaryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListMarketplaceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class DecodeIdResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListEventResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListTransactionResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListImageResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListEventLoginsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public partial class ListEventMessagesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorDescriptionField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public enum TransactionStatus {
        
        /// <remarks/>
        AllTransactions,
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Complete,
        
        /// <remarks/>
        IfSale,
        
        /// <remarks/>
        InArbitration,
        
        /// <remarks/>
        UnwindSale,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autoremarketers.com/dataadapter")]
    public enum EventStatus {
        
        /// <remarks/>
        AllEvents,
        
        /// <remarks/>
        Upcoming,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        Ended,
        
        /// <remarks/>
        Cancelled,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataAdapterSoapChannel : BookSheetMigration.AWGService.DataAdapterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListBidsAndOffersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListBidsAndOffersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListInventoryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListInventoryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListEventMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListEventMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListEventMessagesResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListEventMessagesResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListEventLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListEventLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListEventLoginsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListEventLoginsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListInventoryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListInventoryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListFeaturedInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListFeaturedInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListInventoryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListInventoryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListItemsWithoutImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListItemsWithoutImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListImageResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListImageResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListImageResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListImageResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListTransactionResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListTransactionResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListEventResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListEventResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DecodeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DecodeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.DecodeIdResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.DecodeIdResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListMarketplaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListMarketplaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListMarketplaceResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListMarketplaceResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListEventSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListEventSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ListEventSummaryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ListEventSummaryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ImportInventoryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ImportInventoryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateShippingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateShippingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.UpdateShippingStatusResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.UpdateShippingStatusResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.UpdateInventoryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.UpdateInventoryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ImportEventResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ImportEventResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BookSheetMigration.AWGService.ImportOfferResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BookSheetMigration.AWGService.ImportOfferResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAdapterSoapClient : System.ServiceModel.ClientBase<BookSheetMigration.AWGService.DataAdapterSoap>, BookSheetMigration.AWGService.DataAdapterSoap {
        
        private BeginOperationDelegate onBeginListBidsAndOffersDelegate;
        
        private EndOperationDelegate onEndListBidsAndOffersDelegate;
        
        private System.Threading.SendOrPostCallback onListBidsAndOffersCompletedDelegate;
        
        private BeginOperationDelegate onBeginListEventMessagesDelegate;
        
        private EndOperationDelegate onEndListEventMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onListEventMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListEventLoginsDelegate;
        
        private EndOperationDelegate onEndListEventLoginsDelegate;
        
        private System.Threading.SendOrPostCallback onListEventLoginsCompletedDelegate;
        
        private BeginOperationDelegate onBeginListInventoryDelegate;
        
        private EndOperationDelegate onEndListInventoryDelegate;
        
        private System.Threading.SendOrPostCallback onListInventoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginListFeaturedInventoryDelegate;
        
        private EndOperationDelegate onEndListFeaturedInventoryDelegate;
        
        private System.Threading.SendOrPostCallback onListFeaturedInventoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginListItemsWithoutImagesDelegate;
        
        private EndOperationDelegate onEndListItemsWithoutImagesDelegate;
        
        private System.Threading.SendOrPostCallback onListItemsWithoutImagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListImageDelegate;
        
        private EndOperationDelegate onEndListImageDelegate;
        
        private System.Threading.SendOrPostCallback onListImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTransactionDelegate;
        
        private EndOperationDelegate onEndListTransactionDelegate;
        
        private System.Threading.SendOrPostCallback onListTransactionCompletedDelegate;
        
        private BeginOperationDelegate onBeginListEventDelegate;
        
        private EndOperationDelegate onEndListEventDelegate;
        
        private System.Threading.SendOrPostCallback onListEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginDecodeIdDelegate;
        
        private EndOperationDelegate onEndDecodeIdDelegate;
        
        private System.Threading.SendOrPostCallback onDecodeIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginListMarketplaceDelegate;
        
        private EndOperationDelegate onEndListMarketplaceDelegate;
        
        private System.Threading.SendOrPostCallback onListMarketplaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginListEventSummaryDelegate;
        
        private EndOperationDelegate onEndListEventSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onListEventSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportInventoryDelegate;
        
        private EndOperationDelegate onEndImportInventoryDelegate;
        
        private System.Threading.SendOrPostCallback onImportInventoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateShippingStatusDelegate;
        
        private EndOperationDelegate onEndUpdateShippingStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateShippingStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateInventoryDelegate;
        
        private EndOperationDelegate onEndUpdateInventoryDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateInventoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportEventDelegate;
        
        private EndOperationDelegate onEndImportEventDelegate;
        
        private System.Threading.SendOrPostCallback onImportEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportOfferDelegate;
        
        private EndOperationDelegate onEndImportOfferDelegate;
        
        private System.Threading.SendOrPostCallback onImportOfferCompletedDelegate;
        
        public DataAdapterSoapClient() {
        }
        
        public DataAdapterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAdapterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAdapterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAdapterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ListBidsAndOffersCompletedEventArgs> ListBidsAndOffersCompleted;
        
        public event System.EventHandler<ListEventMessagesCompletedEventArgs> ListEventMessagesCompleted;
        
        public event System.EventHandler<ListEventLoginsCompletedEventArgs> ListEventLoginsCompleted;
        
        public event System.EventHandler<ListInventoryCompletedEventArgs> ListInventoryCompleted;
        
        public event System.EventHandler<ListFeaturedInventoryCompletedEventArgs> ListFeaturedInventoryCompleted;
        
        public event System.EventHandler<ListItemsWithoutImagesCompletedEventArgs> ListItemsWithoutImagesCompleted;
        
        public event System.EventHandler<ListImageCompletedEventArgs> ListImageCompleted;
        
        public event System.EventHandler<ListTransactionCompletedEventArgs> ListTransactionCompleted;
        
        public event System.EventHandler<ListEventCompletedEventArgs> ListEventCompleted;
        
        public event System.EventHandler<DecodeIdCompletedEventArgs> DecodeIdCompleted;
        
        public event System.EventHandler<ListMarketplaceCompletedEventArgs> ListMarketplaceCompleted;
        
        public event System.EventHandler<ListEventSummaryCompletedEventArgs> ListEventSummaryCompleted;
        
        public event System.EventHandler<ImportInventoryCompletedEventArgs> ImportInventoryCompleted;
        
        public event System.EventHandler<UpdateShippingStatusCompletedEventArgs> UpdateShippingStatusCompleted;
        
        public event System.EventHandler<UpdateInventoryCompletedEventArgs> UpdateInventoryCompleted;
        
        public event System.EventHandler<ImportEventCompletedEventArgs> ImportEventCompleted;
        
        public event System.EventHandler<ImportOfferCompletedEventArgs> ImportOfferCompleted;
        
        public BookSheetMigration.AWGService.ListInventoryResult ListBidsAndOffers(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            return base.Channel.ListBidsAndOffers(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListBidsAndOffers(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListBidsAndOffers(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListInventoryResult EndListBidsAndOffers(System.IAsyncResult result) {
            return base.Channel.EndListBidsAndOffers(result);
        }
        
        private System.IAsyncResult OnBeginListBidsAndOffers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            string dealerNumber = ((string)(inValues[4]));
            BookSheetMigration.AWGService.InventoryStatus inventoryStatus = ((BookSheetMigration.AWGService.InventoryStatus)(inValues[5]));
            return this.BeginListBidsAndOffers(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, callback, asyncState);
        }
        
        private object[] OnEndListBidsAndOffers(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListInventoryResult retVal = this.EndListBidsAndOffers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListBidsAndOffersCompleted(object state) {
            if ((this.ListBidsAndOffersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListBidsAndOffersCompleted(this, new ListBidsAndOffersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListBidsAndOffersAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            this.ListBidsAndOffersAsync(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, null);
        }
        
        public void ListBidsAndOffersAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, object userState) {
            if ((this.onBeginListBidsAndOffersDelegate == null)) {
                this.onBeginListBidsAndOffersDelegate = new BeginOperationDelegate(this.OnBeginListBidsAndOffers);
            }
            if ((this.onEndListBidsAndOffersDelegate == null)) {
                this.onEndListBidsAndOffersDelegate = new EndOperationDelegate(this.OnEndListBidsAndOffers);
            }
            if ((this.onListBidsAndOffersCompletedDelegate == null)) {
                this.onListBidsAndOffersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListBidsAndOffersCompleted);
            }
            base.InvokeAsync(this.onBeginListBidsAndOffersDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        dealerNumber,
                        inventoryStatus}, this.onEndListBidsAndOffersDelegate, this.onListBidsAndOffersCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListEventMessagesResult ListEventMessages(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode) {
            return base.Channel.ListEventMessages(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListEventMessages(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListEventMessages(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListEventMessagesResult EndListEventMessages(System.IAsyncResult result) {
            return base.Channel.EndListEventMessages(result);
        }
        
        private System.IAsyncResult OnBeginListEventMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            System.DateTime dateFrom = ((System.DateTime)(inValues[4]));
            System.DateTime dateTo = ((System.DateTime)(inValues[5]));
            int mode = ((int)(inValues[6]));
            return this.BeginListEventMessages(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode, callback, asyncState);
        }
        
        private object[] OnEndListEventMessages(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListEventMessagesResult retVal = this.EndListEventMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListEventMessagesCompleted(object state) {
            if ((this.ListEventMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListEventMessagesCompleted(this, new ListEventMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListEventMessagesAsync(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode) {
            this.ListEventMessagesAsync(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode, null);
        }
        
        public void ListEventMessagesAsync(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode, object userState) {
            if ((this.onBeginListEventMessagesDelegate == null)) {
                this.onBeginListEventMessagesDelegate = new BeginOperationDelegate(this.OnBeginListEventMessages);
            }
            if ((this.onEndListEventMessagesDelegate == null)) {
                this.onEndListEventMessagesDelegate = new EndOperationDelegate(this.OnEndListEventMessages);
            }
            if ((this.onListEventMessagesCompletedDelegate == null)) {
                this.onListEventMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListEventMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginListEventMessagesDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        dateFrom,
                        dateTo,
                        mode}, this.onEndListEventMessagesDelegate, this.onListEventMessagesCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListEventLoginsResult ListEventLogins(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode) {
            return base.Channel.ListEventLogins(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListEventLogins(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListEventLogins(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListEventLoginsResult EndListEventLogins(System.IAsyncResult result) {
            return base.Channel.EndListEventLogins(result);
        }
        
        private System.IAsyncResult OnBeginListEventLogins(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            System.DateTime dateFrom = ((System.DateTime)(inValues[4]));
            System.DateTime dateTo = ((System.DateTime)(inValues[5]));
            int mode = ((int)(inValues[6]));
            return this.BeginListEventLogins(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode, callback, asyncState);
        }
        
        private object[] OnEndListEventLogins(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListEventLoginsResult retVal = this.EndListEventLogins(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListEventLoginsCompleted(object state) {
            if ((this.ListEventLoginsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListEventLoginsCompleted(this, new ListEventLoginsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListEventLoginsAsync(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode) {
            this.ListEventLoginsAsync(securityToken, clientUsername, clientPassword, eventId, dateFrom, dateTo, mode, null);
        }
        
        public void ListEventLoginsAsync(string securityToken, string clientUsername, string clientPassword, int eventId, System.DateTime dateFrom, System.DateTime dateTo, int mode, object userState) {
            if ((this.onBeginListEventLoginsDelegate == null)) {
                this.onBeginListEventLoginsDelegate = new BeginOperationDelegate(this.OnBeginListEventLogins);
            }
            if ((this.onEndListEventLoginsDelegate == null)) {
                this.onEndListEventLoginsDelegate = new EndOperationDelegate(this.OnEndListEventLogins);
            }
            if ((this.onListEventLoginsCompletedDelegate == null)) {
                this.onListEventLoginsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListEventLoginsCompleted);
            }
            base.InvokeAsync(this.onBeginListEventLoginsDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        dateFrom,
                        dateTo,
                        mode}, this.onEndListEventLoginsDelegate, this.onListEventLoginsCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListInventoryResult ListInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            return base.Channel.ListInventory(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListInventory(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListInventoryResult EndListInventory(System.IAsyncResult result) {
            return base.Channel.EndListInventory(result);
        }
        
        private System.IAsyncResult OnBeginListInventory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            string dealerNumber = ((string)(inValues[4]));
            BookSheetMigration.AWGService.InventoryStatus inventoryStatus = ((BookSheetMigration.AWGService.InventoryStatus)(inValues[5]));
            return this.BeginListInventory(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, callback, asyncState);
        }
        
        private object[] OnEndListInventory(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListInventoryResult retVal = this.EndListInventory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListInventoryCompleted(object state) {
            if ((this.ListInventoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListInventoryCompleted(this, new ListInventoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListInventoryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            this.ListInventoryAsync(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, null);
        }
        
        public void ListInventoryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, object userState) {
            if ((this.onBeginListInventoryDelegate == null)) {
                this.onBeginListInventoryDelegate = new BeginOperationDelegate(this.OnBeginListInventory);
            }
            if ((this.onEndListInventoryDelegate == null)) {
                this.onEndListInventoryDelegate = new EndOperationDelegate(this.OnEndListInventory);
            }
            if ((this.onListInventoryCompletedDelegate == null)) {
                this.onListInventoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListInventoryCompleted);
            }
            base.InvokeAsync(this.onBeginListInventoryDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        dealerNumber,
                        inventoryStatus}, this.onEndListInventoryDelegate, this.onListInventoryCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListInventoryResult ListFeaturedInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            return base.Channel.ListFeaturedInventory(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListFeaturedInventory(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListFeaturedInventory(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListInventoryResult EndListFeaturedInventory(System.IAsyncResult result) {
            return base.Channel.EndListFeaturedInventory(result);
        }
        
        private System.IAsyncResult OnBeginListFeaturedInventory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            string dealerNumber = ((string)(inValues[4]));
            BookSheetMigration.AWGService.InventoryStatus inventoryStatus = ((BookSheetMigration.AWGService.InventoryStatus)(inValues[5]));
            return this.BeginListFeaturedInventory(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, callback, asyncState);
        }
        
        private object[] OnEndListFeaturedInventory(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListInventoryResult retVal = this.EndListFeaturedInventory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListFeaturedInventoryCompleted(object state) {
            if ((this.ListFeaturedInventoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListFeaturedInventoryCompleted(this, new ListFeaturedInventoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListFeaturedInventoryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            this.ListFeaturedInventoryAsync(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, null);
        }
        
        public void ListFeaturedInventoryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, object userState) {
            if ((this.onBeginListFeaturedInventoryDelegate == null)) {
                this.onBeginListFeaturedInventoryDelegate = new BeginOperationDelegate(this.OnBeginListFeaturedInventory);
            }
            if ((this.onEndListFeaturedInventoryDelegate == null)) {
                this.onEndListFeaturedInventoryDelegate = new EndOperationDelegate(this.OnEndListFeaturedInventory);
            }
            if ((this.onListFeaturedInventoryCompletedDelegate == null)) {
                this.onListFeaturedInventoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListFeaturedInventoryCompleted);
            }
            base.InvokeAsync(this.onBeginListFeaturedInventoryDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        dealerNumber,
                        inventoryStatus}, this.onEndListFeaturedInventoryDelegate, this.onListFeaturedInventoryCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListImageResult ListItemsWithoutImages(string securityToken, string clientUsername, string clientPassword, int eventId, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            return base.Channel.ListItemsWithoutImages(securityToken, clientUsername, clientPassword, eventId, inventoryStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListItemsWithoutImages(string securityToken, string clientUsername, string clientPassword, int eventId, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListItemsWithoutImages(securityToken, clientUsername, clientPassword, eventId, inventoryStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListImageResult EndListItemsWithoutImages(System.IAsyncResult result) {
            return base.Channel.EndListItemsWithoutImages(result);
        }
        
        private System.IAsyncResult OnBeginListItemsWithoutImages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            BookSheetMigration.AWGService.InventoryStatus inventoryStatus = ((BookSheetMigration.AWGService.InventoryStatus)(inValues[4]));
            return this.BeginListItemsWithoutImages(securityToken, clientUsername, clientPassword, eventId, inventoryStatus, callback, asyncState);
        }
        
        private object[] OnEndListItemsWithoutImages(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListImageResult retVal = this.EndListItemsWithoutImages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListItemsWithoutImagesCompleted(object state) {
            if ((this.ListItemsWithoutImagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListItemsWithoutImagesCompleted(this, new ListItemsWithoutImagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListItemsWithoutImagesAsync(string securityToken, string clientUsername, string clientPassword, int eventId, BookSheetMigration.AWGService.InventoryStatus inventoryStatus) {
            this.ListItemsWithoutImagesAsync(securityToken, clientUsername, clientPassword, eventId, inventoryStatus, null);
        }
        
        public void ListItemsWithoutImagesAsync(string securityToken, string clientUsername, string clientPassword, int eventId, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, object userState) {
            if ((this.onBeginListItemsWithoutImagesDelegate == null)) {
                this.onBeginListItemsWithoutImagesDelegate = new BeginOperationDelegate(this.OnBeginListItemsWithoutImages);
            }
            if ((this.onEndListItemsWithoutImagesDelegate == null)) {
                this.onEndListItemsWithoutImagesDelegate = new EndOperationDelegate(this.OnEndListItemsWithoutImages);
            }
            if ((this.onListItemsWithoutImagesCompletedDelegate == null)) {
                this.onListItemsWithoutImagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListItemsWithoutImagesCompleted);
            }
            base.InvokeAsync(this.onBeginListItemsWithoutImagesDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        inventoryStatus}, this.onEndListItemsWithoutImagesDelegate, this.onListItemsWithoutImagesCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListImageResult ListImage(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, string stockNumber, string vin) {
            return base.Channel.ListImage(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, stockNumber, vin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListImage(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, string stockNumber, string vin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListImage(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, stockNumber, vin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListImageResult EndListImage(System.IAsyncResult result) {
            return base.Channel.EndListImage(result);
        }
        
        private System.IAsyncResult OnBeginListImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            string dealerNumber = ((string)(inValues[4]));
            BookSheetMigration.AWGService.InventoryStatus inventoryStatus = ((BookSheetMigration.AWGService.InventoryStatus)(inValues[5]));
            string stockNumber = ((string)(inValues[6]));
            string vin = ((string)(inValues[7]));
            return this.BeginListImage(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, stockNumber, vin, callback, asyncState);
        }
        
        private object[] OnEndListImage(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListImageResult retVal = this.EndListImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListImageCompleted(object state) {
            if ((this.ListImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListImageCompleted(this, new ListImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListImageAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, string stockNumber, string vin) {
            this.ListImageAsync(securityToken, clientUsername, clientPassword, eventId, dealerNumber, inventoryStatus, stockNumber, vin, null);
        }
        
        public void ListImageAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string dealerNumber, BookSheetMigration.AWGService.InventoryStatus inventoryStatus, string stockNumber, string vin, object userState) {
            if ((this.onBeginListImageDelegate == null)) {
                this.onBeginListImageDelegate = new BeginOperationDelegate(this.OnBeginListImage);
            }
            if ((this.onEndListImageDelegate == null)) {
                this.onEndListImageDelegate = new EndOperationDelegate(this.OnEndListImage);
            }
            if ((this.onListImageCompletedDelegate == null)) {
                this.onListImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListImageCompleted);
            }
            base.InvokeAsync(this.onBeginListImageDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        dealerNumber,
                        inventoryStatus,
                        stockNumber,
                        vin}, this.onEndListImageDelegate, this.onListImageCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListTransactionResult ListTransaction(string securityToken, string clientUsername, string clientPassword, int eventId, string sellerDealerNumber, string buyerDealerNumber, BookSheetMigration.AWGService.TransactionStatus transactionStatus, string dateFrom, string dateTo) {
            return base.Channel.ListTransaction(securityToken, clientUsername, clientPassword, eventId, sellerDealerNumber, buyerDealerNumber, transactionStatus, dateFrom, dateTo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListTransaction(string securityToken, string clientUsername, string clientPassword, int eventId, string sellerDealerNumber, string buyerDealerNumber, BookSheetMigration.AWGService.TransactionStatus transactionStatus, string dateFrom, string dateTo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTransaction(securityToken, clientUsername, clientPassword, eventId, sellerDealerNumber, buyerDealerNumber, transactionStatus, dateFrom, dateTo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListTransactionResult EndListTransaction(System.IAsyncResult result) {
            return base.Channel.EndListTransaction(result);
        }
        
        private System.IAsyncResult OnBeginListTransaction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            string sellerDealerNumber = ((string)(inValues[4]));
            string buyerDealerNumber = ((string)(inValues[5]));
            BookSheetMigration.AWGService.TransactionStatus transactionStatus = ((BookSheetMigration.AWGService.TransactionStatus)(inValues[6]));
            string dateFrom = ((string)(inValues[7]));
            string dateTo = ((string)(inValues[8]));
            return this.BeginListTransaction(securityToken, clientUsername, clientPassword, eventId, sellerDealerNumber, buyerDealerNumber, transactionStatus, dateFrom, dateTo, callback, asyncState);
        }
        
        private object[] OnEndListTransaction(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListTransactionResult retVal = this.EndListTransaction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTransactionCompleted(object state) {
            if ((this.ListTransactionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTransactionCompleted(this, new ListTransactionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTransactionAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string sellerDealerNumber, string buyerDealerNumber, BookSheetMigration.AWGService.TransactionStatus transactionStatus, string dateFrom, string dateTo) {
            this.ListTransactionAsync(securityToken, clientUsername, clientPassword, eventId, sellerDealerNumber, buyerDealerNumber, transactionStatus, dateFrom, dateTo, null);
        }
        
        public void ListTransactionAsync(string securityToken, string clientUsername, string clientPassword, int eventId, string sellerDealerNumber, string buyerDealerNumber, BookSheetMigration.AWGService.TransactionStatus transactionStatus, string dateFrom, string dateTo, object userState) {
            if ((this.onBeginListTransactionDelegate == null)) {
                this.onBeginListTransactionDelegate = new BeginOperationDelegate(this.OnBeginListTransaction);
            }
            if ((this.onEndListTransactionDelegate == null)) {
                this.onEndListTransactionDelegate = new EndOperationDelegate(this.OnEndListTransaction);
            }
            if ((this.onListTransactionCompletedDelegate == null)) {
                this.onListTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginListTransactionDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        sellerDealerNumber,
                        buyerDealerNumber,
                        transactionStatus,
                        dateFrom,
                        dateTo}, this.onEndListTransactionDelegate, this.onListTransactionCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListEventResult ListEvent(string securityToken, string clientUsername, string clientPassword, BookSheetMigration.AWGService.EventStatus eventStatus) {
            return base.Channel.ListEvent(securityToken, clientUsername, clientPassword, eventStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListEvent(string securityToken, string clientUsername, string clientPassword, BookSheetMigration.AWGService.EventStatus eventStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListEvent(securityToken, clientUsername, clientPassword, eventStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListEventResult EndListEvent(System.IAsyncResult result) {
            return base.Channel.EndListEvent(result);
        }
        
        private System.IAsyncResult OnBeginListEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            BookSheetMigration.AWGService.EventStatus eventStatus = ((BookSheetMigration.AWGService.EventStatus)(inValues[3]));
            return this.BeginListEvent(securityToken, clientUsername, clientPassword, eventStatus, callback, asyncState);
        }
        
        private object[] OnEndListEvent(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListEventResult retVal = this.EndListEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListEventCompleted(object state) {
            if ((this.ListEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListEventCompleted(this, new ListEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListEventAsync(string securityToken, string clientUsername, string clientPassword, BookSheetMigration.AWGService.EventStatus eventStatus) {
            this.ListEventAsync(securityToken, clientUsername, clientPassword, eventStatus, null);
        }
        
        public void ListEventAsync(string securityToken, string clientUsername, string clientPassword, BookSheetMigration.AWGService.EventStatus eventStatus, object userState) {
            if ((this.onBeginListEventDelegate == null)) {
                this.onBeginListEventDelegate = new BeginOperationDelegate(this.OnBeginListEvent);
            }
            if ((this.onEndListEventDelegate == null)) {
                this.onEndListEventDelegate = new EndOperationDelegate(this.OnEndListEvent);
            }
            if ((this.onListEventCompletedDelegate == null)) {
                this.onListEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListEventCompleted);
            }
            base.InvokeAsync(this.onBeginListEventDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventStatus}, this.onEndListEventDelegate, this.onListEventCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.DecodeIdResult DecodeId(string securityToken, string clientUsername, string clientPassword, string database, string idType, string id, string status, int mode) {
            return base.Channel.DecodeId(securityToken, clientUsername, clientPassword, database, idType, id, status, mode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDecodeId(string securityToken, string clientUsername, string clientPassword, string database, string idType, string id, string status, int mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDecodeId(securityToken, clientUsername, clientPassword, database, idType, id, status, mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.DecodeIdResult EndDecodeId(System.IAsyncResult result) {
            return base.Channel.EndDecodeId(result);
        }
        
        private System.IAsyncResult OnBeginDecodeId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            string database = ((string)(inValues[3]));
            string idType = ((string)(inValues[4]));
            string id = ((string)(inValues[5]));
            string status = ((string)(inValues[6]));
            int mode = ((int)(inValues[7]));
            return this.BeginDecodeId(securityToken, clientUsername, clientPassword, database, idType, id, status, mode, callback, asyncState);
        }
        
        private object[] OnEndDecodeId(System.IAsyncResult result) {
            BookSheetMigration.AWGService.DecodeIdResult retVal = this.EndDecodeId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDecodeIdCompleted(object state) {
            if ((this.DecodeIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DecodeIdCompleted(this, new DecodeIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DecodeIdAsync(string securityToken, string clientUsername, string clientPassword, string database, string idType, string id, string status, int mode) {
            this.DecodeIdAsync(securityToken, clientUsername, clientPassword, database, idType, id, status, mode, null);
        }
        
        public void DecodeIdAsync(string securityToken, string clientUsername, string clientPassword, string database, string idType, string id, string status, int mode, object userState) {
            if ((this.onBeginDecodeIdDelegate == null)) {
                this.onBeginDecodeIdDelegate = new BeginOperationDelegate(this.OnBeginDecodeId);
            }
            if ((this.onEndDecodeIdDelegate == null)) {
                this.onEndDecodeIdDelegate = new EndOperationDelegate(this.OnEndDecodeId);
            }
            if ((this.onDecodeIdCompletedDelegate == null)) {
                this.onDecodeIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDecodeIdCompleted);
            }
            base.InvokeAsync(this.onBeginDecodeIdDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        database,
                        idType,
                        id,
                        status,
                        mode}, this.onEndDecodeIdDelegate, this.onDecodeIdCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListMarketplaceResult ListMarketplace(string securityToken, string clientUsername, string clientPassword, int mode) {
            return base.Channel.ListMarketplace(securityToken, clientUsername, clientPassword, mode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListMarketplace(string securityToken, string clientUsername, string clientPassword, int mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListMarketplace(securityToken, clientUsername, clientPassword, mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListMarketplaceResult EndListMarketplace(System.IAsyncResult result) {
            return base.Channel.EndListMarketplace(result);
        }
        
        private System.IAsyncResult OnBeginListMarketplace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int mode = ((int)(inValues[3]));
            return this.BeginListMarketplace(securityToken, clientUsername, clientPassword, mode, callback, asyncState);
        }
        
        private object[] OnEndListMarketplace(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListMarketplaceResult retVal = this.EndListMarketplace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListMarketplaceCompleted(object state) {
            if ((this.ListMarketplaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListMarketplaceCompleted(this, new ListMarketplaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListMarketplaceAsync(string securityToken, string clientUsername, string clientPassword, int mode) {
            this.ListMarketplaceAsync(securityToken, clientUsername, clientPassword, mode, null);
        }
        
        public void ListMarketplaceAsync(string securityToken, string clientUsername, string clientPassword, int mode, object userState) {
            if ((this.onBeginListMarketplaceDelegate == null)) {
                this.onBeginListMarketplaceDelegate = new BeginOperationDelegate(this.OnBeginListMarketplace);
            }
            if ((this.onEndListMarketplaceDelegate == null)) {
                this.onEndListMarketplaceDelegate = new EndOperationDelegate(this.OnEndListMarketplace);
            }
            if ((this.onListMarketplaceCompletedDelegate == null)) {
                this.onListMarketplaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListMarketplaceCompleted);
            }
            base.InvokeAsync(this.onBeginListMarketplaceDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        mode}, this.onEndListMarketplaceDelegate, this.onListMarketplaceCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ListEventSummaryResult ListEventSummary(string securityToken, string clientUsername, string clientPassword, int eventId) {
            return base.Channel.ListEventSummary(securityToken, clientUsername, clientPassword, eventId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListEventSummary(string securityToken, string clientUsername, string clientPassword, int eventId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListEventSummary(securityToken, clientUsername, clientPassword, eventId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ListEventSummaryResult EndListEventSummary(System.IAsyncResult result) {
            return base.Channel.EndListEventSummary(result);
        }
        
        private System.IAsyncResult OnBeginListEventSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            return this.BeginListEventSummary(securityToken, clientUsername, clientPassword, eventId, callback, asyncState);
        }
        
        private object[] OnEndListEventSummary(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ListEventSummaryResult retVal = this.EndListEventSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListEventSummaryCompleted(object state) {
            if ((this.ListEventSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListEventSummaryCompleted(this, new ListEventSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListEventSummaryAsync(string securityToken, string clientUsername, string clientPassword, int eventId) {
            this.ListEventSummaryAsync(securityToken, clientUsername, clientPassword, eventId, null);
        }
        
        public void ListEventSummaryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, object userState) {
            if ((this.onBeginListEventSummaryDelegate == null)) {
                this.onBeginListEventSummaryDelegate = new BeginOperationDelegate(this.OnBeginListEventSummary);
            }
            if ((this.onEndListEventSummaryDelegate == null)) {
                this.onEndListEventSummaryDelegate = new EndOperationDelegate(this.OnEndListEventSummary);
            }
            if ((this.onListEventSummaryCompletedDelegate == null)) {
                this.onListEventSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListEventSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginListEventSummaryDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId}, this.onEndListEventSummaryDelegate, this.onListEventSummaryCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ImportInventoryResult ImportInventory(string securityToken, string clientUsername, string clientPassword, int eventId, bool preservePriceInformation, System.Data.DataSet inventoryDataSet) {
            return base.Channel.ImportInventory(securityToken, clientUsername, clientPassword, eventId, preservePriceInformation, inventoryDataSet);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportInventory(string securityToken, string clientUsername, string clientPassword, int eventId, bool preservePriceInformation, System.Data.DataSet inventoryDataSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportInventory(securityToken, clientUsername, clientPassword, eventId, preservePriceInformation, inventoryDataSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ImportInventoryResult EndImportInventory(System.IAsyncResult result) {
            return base.Channel.EndImportInventory(result);
        }
        
        private System.IAsyncResult OnBeginImportInventory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int eventId = ((int)(inValues[3]));
            bool preservePriceInformation = ((bool)(inValues[4]));
            System.Data.DataSet inventoryDataSet = ((System.Data.DataSet)(inValues[5]));
            return this.BeginImportInventory(securityToken, clientUsername, clientPassword, eventId, preservePriceInformation, inventoryDataSet, callback, asyncState);
        }
        
        private object[] OnEndImportInventory(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ImportInventoryResult retVal = this.EndImportInventory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportInventoryCompleted(object state) {
            if ((this.ImportInventoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportInventoryCompleted(this, new ImportInventoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportInventoryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, bool preservePriceInformation, System.Data.DataSet inventoryDataSet) {
            this.ImportInventoryAsync(securityToken, clientUsername, clientPassword, eventId, preservePriceInformation, inventoryDataSet, null);
        }
        
        public void ImportInventoryAsync(string securityToken, string clientUsername, string clientPassword, int eventId, bool preservePriceInformation, System.Data.DataSet inventoryDataSet, object userState) {
            if ((this.onBeginImportInventoryDelegate == null)) {
                this.onBeginImportInventoryDelegate = new BeginOperationDelegate(this.OnBeginImportInventory);
            }
            if ((this.onEndImportInventoryDelegate == null)) {
                this.onEndImportInventoryDelegate = new EndOperationDelegate(this.OnEndImportInventory);
            }
            if ((this.onImportInventoryCompletedDelegate == null)) {
                this.onImportInventoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportInventoryCompleted);
            }
            base.InvokeAsync(this.onBeginImportInventoryDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventId,
                        preservePriceInformation,
                        inventoryDataSet}, this.onEndImportInventoryDelegate, this.onImportInventoryCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.UpdateShippingStatusResult UpdateShippingStatus(string securityToken, string clientUsername, string clientPassword, int transactionId, byte shippingStatus) {
            return base.Channel.UpdateShippingStatus(securityToken, clientUsername, clientPassword, transactionId, shippingStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateShippingStatus(string securityToken, string clientUsername, string clientPassword, int transactionId, byte shippingStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateShippingStatus(securityToken, clientUsername, clientPassword, transactionId, shippingStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.UpdateShippingStatusResult EndUpdateShippingStatus(System.IAsyncResult result) {
            return base.Channel.EndUpdateShippingStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateShippingStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int transactionId = ((int)(inValues[3]));
            byte shippingStatus = ((byte)(inValues[4]));
            return this.BeginUpdateShippingStatus(securityToken, clientUsername, clientPassword, transactionId, shippingStatus, callback, asyncState);
        }
        
        private object[] OnEndUpdateShippingStatus(System.IAsyncResult result) {
            BookSheetMigration.AWGService.UpdateShippingStatusResult retVal = this.EndUpdateShippingStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateShippingStatusCompleted(object state) {
            if ((this.UpdateShippingStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateShippingStatusCompleted(this, new UpdateShippingStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateShippingStatusAsync(string securityToken, string clientUsername, string clientPassword, int transactionId, byte shippingStatus) {
            this.UpdateShippingStatusAsync(securityToken, clientUsername, clientPassword, transactionId, shippingStatus, null);
        }
        
        public void UpdateShippingStatusAsync(string securityToken, string clientUsername, string clientPassword, int transactionId, byte shippingStatus, object userState) {
            if ((this.onBeginUpdateShippingStatusDelegate == null)) {
                this.onBeginUpdateShippingStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateShippingStatus);
            }
            if ((this.onEndUpdateShippingStatusDelegate == null)) {
                this.onEndUpdateShippingStatusDelegate = new EndOperationDelegate(this.OnEndUpdateShippingStatus);
            }
            if ((this.onUpdateShippingStatusCompletedDelegate == null)) {
                this.onUpdateShippingStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateShippingStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateShippingStatusDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        transactionId,
                        shippingStatus}, this.onEndUpdateShippingStatusDelegate, this.onUpdateShippingStatusCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.UpdateInventoryResult UpdateInventory(string securityToken, string clientUsername, string clientPassword, int listingId, string dealerNumber, string stockNumber, string vin, string propertyName, string propertyValue, int mode) {
            return base.Channel.UpdateInventory(securityToken, clientUsername, clientPassword, listingId, dealerNumber, stockNumber, vin, propertyName, propertyValue, mode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateInventory(string securityToken, string clientUsername, string clientPassword, int listingId, string dealerNumber, string stockNumber, string vin, string propertyName, string propertyValue, int mode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateInventory(securityToken, clientUsername, clientPassword, listingId, dealerNumber, stockNumber, vin, propertyName, propertyValue, mode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.UpdateInventoryResult EndUpdateInventory(System.IAsyncResult result) {
            return base.Channel.EndUpdateInventory(result);
        }
        
        private System.IAsyncResult OnBeginUpdateInventory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            int listingId = ((int)(inValues[3]));
            string dealerNumber = ((string)(inValues[4]));
            string stockNumber = ((string)(inValues[5]));
            string vin = ((string)(inValues[6]));
            string propertyName = ((string)(inValues[7]));
            string propertyValue = ((string)(inValues[8]));
            int mode = ((int)(inValues[9]));
            return this.BeginUpdateInventory(securityToken, clientUsername, clientPassword, listingId, dealerNumber, stockNumber, vin, propertyName, propertyValue, mode, callback, asyncState);
        }
        
        private object[] OnEndUpdateInventory(System.IAsyncResult result) {
            BookSheetMigration.AWGService.UpdateInventoryResult retVal = this.EndUpdateInventory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateInventoryCompleted(object state) {
            if ((this.UpdateInventoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateInventoryCompleted(this, new UpdateInventoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateInventoryAsync(string securityToken, string clientUsername, string clientPassword, int listingId, string dealerNumber, string stockNumber, string vin, string propertyName, string propertyValue, int mode) {
            this.UpdateInventoryAsync(securityToken, clientUsername, clientPassword, listingId, dealerNumber, stockNumber, vin, propertyName, propertyValue, mode, null);
        }
        
        public void UpdateInventoryAsync(string securityToken, string clientUsername, string clientPassword, int listingId, string dealerNumber, string stockNumber, string vin, string propertyName, string propertyValue, int mode, object userState) {
            if ((this.onBeginUpdateInventoryDelegate == null)) {
                this.onBeginUpdateInventoryDelegate = new BeginOperationDelegate(this.OnBeginUpdateInventory);
            }
            if ((this.onEndUpdateInventoryDelegate == null)) {
                this.onEndUpdateInventoryDelegate = new EndOperationDelegate(this.OnEndUpdateInventory);
            }
            if ((this.onUpdateInventoryCompletedDelegate == null)) {
                this.onUpdateInventoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateInventoryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateInventoryDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        listingId,
                        dealerNumber,
                        stockNumber,
                        vin,
                        propertyName,
                        propertyValue,
                        mode}, this.onEndUpdateInventoryDelegate, this.onUpdateInventoryCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ImportEventResult ImportEvent(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet eventDataSet) {
            return base.Channel.ImportEvent(securityToken, clientUsername, clientPassword, eventDataSet);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportEvent(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet eventDataSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportEvent(securityToken, clientUsername, clientPassword, eventDataSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ImportEventResult EndImportEvent(System.IAsyncResult result) {
            return base.Channel.EndImportEvent(result);
        }
        
        private System.IAsyncResult OnBeginImportEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            System.Data.DataSet eventDataSet = ((System.Data.DataSet)(inValues[3]));
            return this.BeginImportEvent(securityToken, clientUsername, clientPassword, eventDataSet, callback, asyncState);
        }
        
        private object[] OnEndImportEvent(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ImportEventResult retVal = this.EndImportEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportEventCompleted(object state) {
            if ((this.ImportEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportEventCompleted(this, new ImportEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportEventAsync(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet eventDataSet) {
            this.ImportEventAsync(securityToken, clientUsername, clientPassword, eventDataSet, null);
        }
        
        public void ImportEventAsync(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet eventDataSet, object userState) {
            if ((this.onBeginImportEventDelegate == null)) {
                this.onBeginImportEventDelegate = new BeginOperationDelegate(this.OnBeginImportEvent);
            }
            if ((this.onEndImportEventDelegate == null)) {
                this.onEndImportEventDelegate = new EndOperationDelegate(this.OnEndImportEvent);
            }
            if ((this.onImportEventCompletedDelegate == null)) {
                this.onImportEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportEventCompleted);
            }
            base.InvokeAsync(this.onBeginImportEventDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        eventDataSet}, this.onEndImportEventDelegate, this.onImportEventCompletedDelegate, userState);
        }
        
        public BookSheetMigration.AWGService.ImportOfferResult ImportOffer(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet offerDataSet) {
            return base.Channel.ImportOffer(securityToken, clientUsername, clientPassword, offerDataSet);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginImportOffer(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet offerDataSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportOffer(securityToken, clientUsername, clientPassword, offerDataSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BookSheetMigration.AWGService.ImportOfferResult EndImportOffer(System.IAsyncResult result) {
            return base.Channel.EndImportOffer(result);
        }
        
        private System.IAsyncResult OnBeginImportOffer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityToken = ((string)(inValues[0]));
            string clientUsername = ((string)(inValues[1]));
            string clientPassword = ((string)(inValues[2]));
            System.Data.DataSet offerDataSet = ((System.Data.DataSet)(inValues[3]));
            return this.BeginImportOffer(securityToken, clientUsername, clientPassword, offerDataSet, callback, asyncState);
        }
        
        private object[] OnEndImportOffer(System.IAsyncResult result) {
            BookSheetMigration.AWGService.ImportOfferResult retVal = this.EndImportOffer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportOfferCompleted(object state) {
            if ((this.ImportOfferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportOfferCompleted(this, new ImportOfferCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportOfferAsync(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet offerDataSet) {
            this.ImportOfferAsync(securityToken, clientUsername, clientPassword, offerDataSet, null);
        }
        
        public void ImportOfferAsync(string securityToken, string clientUsername, string clientPassword, System.Data.DataSet offerDataSet, object userState) {
            if ((this.onBeginImportOfferDelegate == null)) {
                this.onBeginImportOfferDelegate = new BeginOperationDelegate(this.OnBeginImportOffer);
            }
            if ((this.onEndImportOfferDelegate == null)) {
                this.onEndImportOfferDelegate = new EndOperationDelegate(this.OnEndImportOffer);
            }
            if ((this.onImportOfferCompletedDelegate == null)) {
                this.onImportOfferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportOfferCompleted);
            }
            base.InvokeAsync(this.onBeginImportOfferDelegate, new object[] {
                        securityToken,
                        clientUsername,
                        clientPassword,
                        offerDataSet}, this.onEndImportOfferDelegate, this.onImportOfferCompletedDelegate, userState);
        }
    }
}
